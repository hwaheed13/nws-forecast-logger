name: Capture Predictions EST
on:
  schedule:
    - cron: '0 11 * * *'  # 7 AM EDT
    - cron: '0 23 * * *'  # 7 PM EDT
  workflow_dispatch:

jobs:
  capture:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: pip install requests beautifulsoup4 pytz
      
      - name: Capture and Log Predictions
        run: |
          python3 << 'EOF'
          import requests
          from datetime import datetime, timedelta, timezone
          import pytz
          import re
          
          et = pytz.timezone('America/New_York')
          now = datetime.now(et)
          hour = now.hour
          today = now.strftime('%Y-%m-%d')
          tomorrow = (now + timedelta(days=1)).strftime('%Y-%m-%d')
          timestamp = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f')[:-3] + 'Z'
          
          print(f"Current ET hour: {hour}")
          print(f"Current ET date: {today}")
          
          # Get the HTML
          response = requests.get('https://app.dailydewpoint.com/')
          html = response.text
          
          # Debug: log first part of HTML so we can inspect structure
          print("----- HTML snippet start -----")
          print(html[:500])
          print("----- HTML snippet end -----")
          
          # Updated regex (more flexible)
          pattern = r'class="prediction-value[^"]*">([\d.]+)'
          matches = re.findall(pattern, html)
          
          if len(matches) >= 2:
              value_today = matches[0]
              value_tomorrow = matches[-1]
              print(f"Found values: TODAY={value_today}, TOMORROW={value_tomorrow}")
              
              api_url = 'https://app.dailydewpoint.com/api/log-prediction-snapshot'
              
              if hour == 7:
                  # Morning captures
                  r1 = requests.post(api_url, json={
                      'target_date': today,
                      'prediction_type': 'morning_of',
                      'prediction_value': float(value_today),
                      'snapshot_time': timestamp
                  })
                  print(f"Logged morning_of: {value_today} (status={r1.status_code})")
                  
                  r2 = requests.post(api_url, json={
                      'target_date': tomorrow,
                      'prediction_type': 'day_before_morning',
                      'prediction_value': float(value_tomorrow),
                      'snapshot_time': timestamp
                  })
                  print(f"Logged day_before_morning: {value_tomorrow} (status={r2.status_code})")
                  
              elif hour == 19:
                  # Evening capture
                  r3 = requests.post(api_url, json={
                      'target_date': tomorrow,
                      'prediction_type': 'night_before',
                      'prediction_value': float(value_tomorrow),
                      'snapshot_time': timestamp
                  })
                  print(f"Logged night_before: {value_tomorrow} (status={r3.status_code})")
              else:
                  print(f"Manual run at hour {hour}")
          else:
              print(f"Could not find prediction values. Found: {matches}")
          EOF
